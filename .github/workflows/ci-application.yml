name: CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - 'integration'
      
jobs:
  # Frontend Pipeline
  frontend-build-and-test:
    name: Frontend - Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' 

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Lint code
        run: |
          cd frontend
          npm run lint | tee /dev/null

      - name: Build
        run: |
          cd frontend
          npm run build

  frontend-build-push-image:
    name: Frontend - Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: frontend-build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:frontend"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest, ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}

  # frontend-update-cd:
  #   name: Frontend - Update CD Workflow
  #   runs-on: ubuntu-latest
  #   needs: frontend-build-push-image
  #   steps:
  #     - name: Trigger CD Workflow
  #       uses: actions/github-script@v6
  #       with:
  #         script: |
  #           const response = await github.actions.createWorkflowDispatch({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             workflow_id: 'cd.yml',
  #             ref: 'main',
  #             inputs: {
  #               service: 'frontend',
  #               image_tag: '${{ github.sha }}'
  #             }
  #           });
  #           core.info(`Triggered CD workflow: ${response.status}`);

  # Backend Pipeline
  backend-build-and-test:
    name: Backend - Build & Test
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: changethis123
          POSTGRES_DB: app
          POSTGRES_HOST: localhost
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          cd backend
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install
          
      - name: Copy env file
        run: |
          cd backend
          cp .env.sample .env

      - name: Run app
        run: |
          cd backend
          poetry run bash ./prestart.sh
          poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 &

      - name: Run tests
        run: |
          cd backend
          poetry run pytest


  backend-build-push-image:
    name: Backend - Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: backend-build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:backend"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest, ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}


  # backend-update-cd:
  #   name: Backend - Update CD Workflow
  #   runs-on: ubuntu-latest
  #   needs: backend-build-push-image
  #   steps:
  #     - name: Trigger CD Workflow
  #       uses: actions/github-script@v6
  #       with:
  #         script: |
  #           const response = await github.actions.createWorkflowDispatch({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             workflow_id: 'cd.yml',
  #             ref: 'main',
  #             inputs: {
  #               service: 'backend',
  #               image_tag: '${{ github.sha }}'
  #             }
  #           });
  #           core.info(`Triggered CD workflow: ${response.status}`);


